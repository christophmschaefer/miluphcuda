#!/bin/bash

DOXY="doxygen"
BASHDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
DOCSDIR="$BASHDIR/../docs"
DOXYDIR="$BASHDIR/DoxygenFiles"

VERBOSE=false

# function to display the help
usage() 
{
	echo "This script lets you generate the documentation for miluphcuda!"
	echo " "
	echo "Usage:"
	echo "------------------------------------------------------"
	echo "[-d | --doxygen]          path to doxygen executable"
	echo "[-r | --remove]           remove the documentation"
	echo "[-v | --verbosity]        verbosity"
	echo "[-h | --help]             show the help"
	echo "------------------------------------------------------"
}

# function to create the appropriate folder structure for the documentation
create_folder_structure()
{
	mkdir -p $DOCSDIR/
}

# function to delete the documentation
delete_documentation()
{
	rm -r $BASHDIR/html/
	rm -r $BASHDIR/latex/
	rm -r $DOCSDIR
}

# function to write the include file for the Doxyfile (doxygen input file)
write_to_doxygen_inc()
{	
	echo "# Generatd by make_doc shell script" > $DOXYDIR/doxyfile.inc
	echo "# -----------------------------------------------" >> $DOXYDIR/doxyfile.inc
	echo "INPUT = $BASHDIR/../" >> $DOXYDIR/doxyfile.inc
	echo "FILE_PATTERNS = "*.md" "*.h" "*.cu"" >> $DOXYDIR/doxyfile.inc
	echo "OUTPUT_DIRECTORY = $BASHDIR/" >> $DOXYDIR/doxyfile.inc
	echo "HTML_HEADER = $DOXYDIR/header.html" >> $DOXYDIR/doxyfile.inc
	echo "HTML_FOOTER = $DOXYDIR/footer.html" >> $DOXYDIR/doxyfile.inc
	echo "HTML_STYLESHEET = $DOXYDIR/doxygen-custom.css" >> $DOXYDIR/doxyfile.inc
	echo "# -----------------------------------------------" >> $DOXYDIR/doxyfile.inc
	echo "HTML_EXTRA_FILES = $BASHDIR/miluphcuda_documentation.pdf" >> $DOXYDIR/doxyfile.inc
	echo "USE_MDFILE_AS_MAINPAGE = $BASHDIR/Mainpage.md" >> $DOXYDIR/doxyfile.inc
}

# function to copy the doc/html/ files to the docs/ folder 
copy_to_docs()
{
cp -r $BASHDIR/html/. $DOCSDIR
}

# parse the command line arguments
while [ "$1" != "" ]; do
    case $1 in
	-d | --doxygen )        shift
				DOXY="$1"
				;;
	-r | --remove ) 	delete_documentation
				exit 1
				;;
	-v | --verbose ) 	VERBOSE=true;
	 			;;	
        -h | --help )           usage
                                exit 1
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

if [ $VERBOSE = true ]; then
	echo "Start the documentation generation ..."
	echo " "
	echo "The Doxygen executable is set to: $DOXY"
	echo " "
	echo "    deleting the (old) documentation ..."
fi
delete_documentation

if [ $VERBOSE = true ]; then
	echo "    creating folder structure for the documentation..."
fi
create_folder_structure

if [ $VERBOSE = true ]; then
	echo "    writing to doxygen include file (doxyfile.inc) ..."
fi
write_to_doxygen_inc

if [ $VERBOSE = true ]; then
	echo "    creating documentation using doxygen ..."
	echo "    this takes some seconds ..."
fi
$DOXY $DOXYDIR/Doxyfile &> $BASHDIR/doxygen.log

if [ $VERBOSE = true ]; then
	echo "    copying generated html files to docs/ directory ..."
fi
copy_to_docs

if [ $VERBOSE = true ]; then
	echo " "
	echo "Finished the documentation generation!"
	echo "Go to docs/ and open the index.html file in a browser to see the result!"
fi

